"use strict";let users={},waiting=[];function findGame(e){e&&waiting.push(e.socket.id),waiting.length>1&&(null===game&&(game=new Game(0)),game&&(game.addUser(users[waiting.shift()],0),game.addUser(users[waiting.shift()],1),game.usersAdded()))}function removeUser(e){game?(game.removeUser(game.objIDs[e.socket.id]),Object.keys(game.players).length<1&&(game=null,findGame())):(delete users[e.socket.id],-1!==waiting.indexOf(e.socket.id)&&waiting.splice(waiting.indexOf(e.socket.id),1))}class User{constructor(e){this.socket=e}start(e){this.socket.emit("start")}end(){this.socket.emit("end")}}module.exports={io:e=>{const s=new User(e);users[s.socket.id]=s,e.on("disconnect",()=>{console.log("Disconnected: "+e.id),removeUser(s)}),e.on("findGame",()=>{findGame(s)}),e.on("input",e=>{receiveInput(JSON.parse(e))}),e.on("changeHero",e=>{assignButtonFunctions(e.id,e.hero)}),e.emit("connected",e.id),console.log("Connected: "+e.id)}};