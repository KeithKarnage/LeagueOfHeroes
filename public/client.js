"use strict";alert('Failed to load images from "http://www.opengamea... " \nerror code - 404: file not found \nFailed to load sounds from "http://www.freesound.c... " \nerror code - 404: file not found');let socket,ctx,Canvas=(e=innerWidth,t=innerHeight)=>{let n=document.createElement("canvas");return n.context=n.getContext("2d"),n.width=e,n.height=t,n},resize=()=>{let e=canvas.width;canvas.width=canvas.height,canvas.height=e,document.getElementById("message").innerHTML=canvas.width+", "+canvas.height,game&&game.resize()},canvas=Canvas(),oneP=()=>{hideButtons(),game=new Game(2)},manyP=()=>{socket.emit("findGame"),hideButtons(),document.getElementById("message").innerHTML="Searching for opponent..."},gameFound=()=>{game=new Game(1),document.getElementById("message").innerHTML="Welcome!"},hideButtons=()=>{document.getElementById("buttons").style.visibility="hidden",document.getElementById("div").style.visibility="hidden"},showButtons=()=>{document.getElementById("buttons").style.visibility="visible",document.getElementById("div").style.visibility="visible"},closeHeroes=()=>{document.getElementById("images").style.width=0,document.getElementById("open").style.visibility="visible",document.getElementById("heroData").style.visibility="hidden"},openHeroes=()=>{document.getElementById("images").style.width="100%",document.getElementById("open").style.visibility="hidden",document.getElementById("heroData").style.visibility="visible"},hero=0,heroPicked=null,pickHero=e=>{hero=e,document.getElementById("heroName").innerHTML=Object.keys(HEROES)[e],document.getElementById("heroStats").innerHTML=HEROES[Object.keys(HEROES)[e]].statLine,console.log(HEROES[Object.keys(HEROES)[e]]),game&&(client?socket.emit("changeHero",{id:game.player.id,hero:e}):assignButtonFunctions(game.player.id,e))},touches=[],addControls=()=>{addEventListener("mousedown",touchHandler,!1),addEventListener("touchstart",touchHandler,!1),addEventListener("keydown",keyHandler,!1)},touchHandler=e=>{switch(e.preventDefault(),e.type){case"mousedown":game&&touches.push({x:e.clientX,y:e.clientY});break;case"touchstart":game&&e.touches.length&&touches.push({x:e.touches[0].clientX,y:e.touches[0].clientY})}},keyHandler=e=>{game&&buttonFunctions[game.player.id][e.keyCode-49]&&(client&&buttonFunctions[game.player.id][e.keyCode-49].pressed(game.player.id),touches.push({x:0,y:0,button:game.buttons[e.keyCode-49].parent}))};function bind(){socket.on("connect",()=>{console.log("connec")}),socket.on("disconnect",()=>{console.log("discon")}),socket.on("error",()=>{console.log("error")}),socket.on("connected",e=>{console.log(e)}),socket.on("gameFound",e=>{gameFound()}),socket.on("addPlayer",e=>{game.addUser(e)}),socket.on("changedHero",e=>{assignButtonFunctions(e.id,e.hero)}),socket.on("removeUser",e=>{game&&game.removeUser(e)}),socket.on("gameOver",e=>{game.endGame(e)}),socket.on("update",e=>{receiveUpdate(e)})}function init(){socket=io({upgrade:!1,transports:["websocket"]}),bind()}document.body.prepend(canvas),canvas.context.fillStyle="cornflowerblue",canvas.context.fillRect(0,0,innerWidth,innerHeight),document.getElementById("rightside").addEventListener("mousedown",e=>{heroPicked={x:e.clientX,y:e.clientY}},!1),document.getElementById("rightside").addEventListener("touchstart",e=>{heroPicked={x:e.touches[0].clientX,y:e.touches[0].clientY}},!1),addEventListener("orientationchange",resize),addControls(),simulate(0),window.addEventListener("load",init,!1);